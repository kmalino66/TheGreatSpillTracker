@page "/"
@using TheGreatSpillsTracker.Data
@using Microsoft.AspNetCore.SignalR.Client
@inject IJSRuntime jrt
@inject NavigationManager NavigationManager
@inject SpillDataService spillService

<div class="jumbotron">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <h1 class="display-4">The Great Spills Tracker</h1>
                <p class="lead">A simple app to keep track of time since Trent last spilled.</p>
            </div>
            <div class="col-md-4">
                <img src="images/squat.jpg" />
            </div>
        </div>
    </div>
</div>




<body onresize="RebuildTimeCircles()">
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Last Spill at Work</h3>
                </div>
                <div class="card-body">
                    <div class="EnterpriseTime" data-date="@spillService.GetSpill().WorkSpillString()"></div>
                    <h3 class="badge badge-primary">Spill Count: @spillService.GetSpill().WorkSpillCount</h3>
                    @if (!string.IsNullOrWhiteSpace(spillService.GetSpill().WorkSpill.Description))
                    {
                        <h3 class="badge badge-primary">Spill Description: @spillService.GetSpill().WorkSpill.Description</h3>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Last Spill at Home</h3>
                </div>
                <div class="card-body">
                    <div class="HomeTime" data-date="@spillService.GetSpill().HomeSpillString()"></div>
                    <h3 class="badge badge-primary">Spill Count: @spillService.GetSpill().HomeSpillCount</h3>
                    @if (!string.IsNullOrWhiteSpace(spillService.GetSpill().HomeSpill.Description))
                    {
                        <h3 class="badge badge-primary">Spill Description: @spillService.GetSpill().HomeSpill.Description</h3>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Last Big Spill</h3>
                </div>
                <div class="card-body">
                    <div class="RecordTime" data-date="@spillService.GetSpill().BigSpillString()"></div>
                    <h3 class="badge badge-primary">Spill Count: @spillService.GetSpill().BigSpillCount</h3>
                    @if (!string.IsNullOrWhiteSpace(spillService.GetSpill().BigSpill.Description))
                    {
                        <h3 class="badge badge-primary">Spill Description: @spillService.GetSpill().BigSpill.Description</h3>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h3>Spill Statistics</h3>
                </div>
                <div class="card-body">
                    <table class="table">
                        <tbody>
                            <tr>
                                <th scope="row">Record Time With No Spills</th>
                                <td>@ReadableTime.GetReadableTimespan(spillService.GetSpill().MaxTimeNoSpill)</td>
                            </tr>
                            <tr>
                                <th scope="row">Shortest Time With No Spills</th>
                                <td>@ReadableTime.GetReadableTimespan(spillService.GetSpill().MinTimeNoSpill)</td>
                            </tr>
                            <tr>
                                <th scope="row">Total Spill Count</th>
                                <td>@spillService.GetSpill().SpillCount</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</body>

@code {

     HubConnection hubConnection;

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await jrt.InvokeVoidAsync("InitTimeCircles");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        spillService.Initialize();
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/uHub"))
            .Build();

        hubConnection.On("broadcastMessage", () =>
        {
            jrt.InvokeVoidAsync("ReloadPage");
        });

        await hubConnection.StartAsync();
    }

}

